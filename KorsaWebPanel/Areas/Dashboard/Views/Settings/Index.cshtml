@model  BasketWebPanel.ViewModels.SettingsDTO
@{
    ViewBag.Title = "GeneralSettings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .image-preview-input-instagram input[type=file] {
        position: absolute;
        top: 0;
        right: 0;
        margin: 0;
        padding: 0;
        font-size: 20px;
        cursor: pointer;
        opacity: 0;
        filter: alpha(opacity=0);
    }
    .SelectedProductName{
        cursor:default;
    /*white-space: nowrap; 
    width: 10px; 
    overflow: hidden;
    text-overflow: ellipsis;*/ 
    }
</style>


@*<input id="ImageValue" type="hidden" value="@Model.BannerImages.Count" />
<input id="ImageValueInsta" type="hidden" value="@Model.InstagramImage" />*@
<div class="right_col" role="main">
    <div class="row">
        <div class="x_panel ">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success" id="success-alert">
                    <button type="button" class="close" data-dismiss="alert">x</button>
                    <strong></strong><span>@TempData["SuccessMessage"]</span>
                </div>
            }
            <div class="alert alert-error" id="error-alert" hidden>
                <button type="button" class="close" data-dismiss="alert">x</button>
                <strong>Error! </strong> <span> </span>
            </div>
            <div class="x_title">
                <h3 class="pull-left">General Settings</h3>
                @*<div class="pull-right">
                        <a href="#" class="btn bg-green">
                            <i class="fa fa-plus-square"></i>
                            Save
                        </a>
                    </div>*@
                <div class="clearfix"></div>
            </div>
            <p>
            </p>
            @using (Ajax.BeginForm("Index", "Settings", new AjaxOptions { OnSuccess = "OnSuccessSettingsUpdation", OnFailure = "OnFailedInsertion", LoadingElementId = "divLoader" }, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
            <div class="x_content">

                @*<div class="form-group">
                    <div class="row">
                        <div class="col-md-3 col-xs-5 " style="text-align:left;">
                            <label class="control-label" for="">Currency Symbol</label>
                            <span class="ico-help" title="Currency for the whole app"><i class="fa fa-question-circle"></i></span>
                        </div>
                        <div class="col-md-9 col-xs-9 ">
                            @Html.TextBoxFor(x => x.CurrencySymbol, new { @class = "form-control", placeholder = "Currency Symbol", id = "CurrencySymbol", @readonly = true })
                            @Html.ValidationMessageFor(m => m.CurrencySymbol, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-3 col-xs-5 " style="text-align:left;">
                            <label class="control-label" for="">Invitation Bonus</label>
                            <span class="ico-help" title="Bonus credit that will be given to user on inviteing a friend to App"><i class="fa fa-question-circle"></i></span>
                        </div>
                        <div class="col-md-9 col-xs-9 ">
                            @Html.TextBoxFor(x => x.InvitationBonus, new { @class = "form-control", placeholder = "Invitation Bonus", id = "InvitationBonus" })
                            @Html.ValidationMessageFor(m => m.InvitationBonus, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-3 col-xs-5 " style="text-align:left;">
                            <label class="control-label" for="">Currency</label>
                        </div>
                        <div class="col-md-9 col-xs-9 ">
                            @if (Model.Role == Utility.RoleTypes.SuperAdmin)
                            {
                                @Html.TextBoxFor(x => x.English.Currency, new { @class = "form-control", placeholder = "Currency", id = "Currency" })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.English.Currency, new { @class = "form-control", placeholder = "Currency", id = "Currency", @readonly = true })
                            }
                            @Html.ValidationMessageFor(m => m.English.Currency, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-3 col-xs-5 " style="text-align:left;">
                            <label class="control-label" for="">عملة</label>
                        </div>
                        <div class="col-md-9 col-xs-9 ">
                            @if (Model.Role == Utility.RoleTypes.SuperAdmin)
                            {
                                @Html.TextBoxFor(x => x.Arabic.Currency, new { @class = "form-control", placeholder = "عملة", id = "CurrencyAr" })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.Arabic.Currency, new { @class = "form-control", placeholder = "عملة", id = "CurrencyAr", @readonly = true })
                            }
                            @Html.ValidationMessageFor(m => m.Arabic.Currency, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-3 col-xs-5 " style="text-align:left;">
                            <label class="control-label" for="">About Us</label>
                        </div>
                        <div class="col-md-9 col-xs-9 ">
                            @if (Model.Role == Utility.RoleTypes.SuperAdmin)
                            {
                                @Html.TextAreaFor(x => x.English.AboutUs, new { @class = "form-control", placeholder = "About Us", id = "AboutUs" })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.English.AboutUs, new { @class = "form-control", placeholder = "About Us", id = "AboutUs", @readonly = true })
                            }
                            @Html.ValidationMessageFor(m => m.English.AboutUs, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-3 col-xs-5 " style="text-align:left;">
                            <label class="control-label" for="">معلومات عنا</label>
                        </div>
                        <div class="col-md-9 col-xs-9 ">
                            @if (Model.Role == Utility.RoleTypes.SuperAdmin)
                            {
                                @Html.TextAreaFor(x => x.Arabic.AboutUs, new { @class = "form-control", placeholder = "معلومات عنا", id = "AboutUs" })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.Arabic.AboutUs, new { @class = "form-control", placeholder = "معلومات عنا", id = "AboutUs", @readonly = true })
                            }
                            @Html.ValidationMessageFor(m => m.Arabic.AboutUs, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-3 col-xs-5 " style="text-align:left;">
                            <label class="control-label" for="">Privacy Policy</label>
                        </div>
                        <div class="col-md-9 col-xs-9 ">
                            @if (Model.Role == Utility.RoleTypes.SuperAdmin)
                            {
                                @Html.TextAreaFor(x => x.English.PrivacyPolicy, new { @class = "form-control", placeholder = "Privacy Policy", id = "PrivacyPolicy" })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.English.PrivacyPolicy, new { @class = "form-control", placeholder = "Privacy Policy", id = "PrivacyPolicy", @readonly = true })
                            }
                            @Html.ValidationMessageFor(m => m.English.PrivacyPolicy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-3 col-xs-5 " style="text-align:left;">
                            <label class="control-label" for="">سياسة خاصة</label>
                        </div>
                        <div class="col-md-9 col-xs-9 ">
                            @if (Model.Role == Utility.RoleTypes.SuperAdmin)
                            {
                                @Html.TextAreaFor(x => x.Arabic.PrivacyPolicy, new { @class = "form-control", placeholder = "سياسة خاصة", id = "PrivacyPolicyAr" })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.Arabic.PrivacyPolicy, new { @class = "form-control", placeholder = "سياسة خاصة", id = "PrivacyPolicyAr", @readonly = true })
                            }
                            @Html.ValidationMessageFor(m => m.Arabic.PrivacyPolicy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="form-group">
                    <div class="row">
                        <div class="col-md-3 col-xs-5 " style="text-align:left;">
                            <label class="control-label" for="">Terms & Conditions</label>
                        </div>
                        <div class="col-md-9 col-xs-9 ">
                            @if (Model.Role == Utility.RoleTypes.SuperAdmin)
                            {
                                @Html.TextAreaFor(x => x.English.TermsOfUse, new { @class = "form-control", placeholder = "Terms & Conditions", id = "TermsOfUse" })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.English.TermsOfUse, new { @class = "form-control", placeholder = "Terms & Conditions", id = "TermsOfUse", @readonly = true })
                            }
                            @Html.ValidationMessageFor(m => m.English.TermsOfUse, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-3 col-xs-5 " style="text-align:left;">
                            <label class="control-label" for="">الشروط والأحكام</label>
                        </div>
                        <div class="col-md-9 col-xs-9 ">
                            @if (Model.Role == Utility.RoleTypes.SuperAdmin)
                            {
                                @Html.TextAreaFor(x => x.Arabic.TermsOfUse, new { @class = "form-control", placeholder = "الشروط والأحكام", id = "TermsOfUseAr" })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.Arabic.TermsOfUse, new { @class = "form-control", placeholder = "الشروط والأحكام", id = "TermsOfUseAr", @readonly = true })
                            }
                            @Html.ValidationMessageFor(m => m.Arabic.TermsOfUse, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row text-right">
                    <button type="submit" class="btn btn-success text-right">Update Settings</button>
                </div>
            </div>
            }
        </div>
    </div>
</div>



<div id="myModal"  class="modal fade" role="dialog">
    <div class="modal-dialog" style="width:100%;">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Select Product</h4>
            </div>
            <div class="modal-body">
             @* start of table *@

                <div class="table-responsive" style="overflow-x:auto; overflow-y:hidden">
                    <table id="datatable" class="table table-striped table-bordered" style="table-layout: auto; text-align:center;">
                        <thead>
                            <tr>
                                <th class="middled sorting_disabled" style="vertical-align:middle">ID</th>
                                <th style="vertical-align:middle">Product Name</th>
                                <th style="vertical-align:middle;">Product Image</th>
                                <th style="vertical-align:middle;">Action</th>
                            </tr>
                        </thead>
                        <tbody id="selectProductTableBody" >
                           
                                @*<tr>
                                    <td style="vertical-align:middle"></td>
                                    <td style="vertical-align:middle"></td>
                                    <td style="vertical-align:middle; "><img src="" style="height:35px;width:100px; max-height:35px;max-width:100px" class="normal" /></td>
                                    <td style="vertical-align:middle"></td>
                                   </tr>*@
                            
                        </tbody>
                    </table>
                    <script>
                            $(document).on("click", ".deleteButtons", function () {
                                var productId = $(this).data('productid');
                                $("#productid").val(productId);
                            });

                            $(document).on("click", ".editButtons", function () {
                                var productId = $(this).data('productid');
                                var url = '@Url.Action("Index", "Product", new { ProductId = "__id__" })';
                                window.location.href = url.replace('__id__', productId);
                            });

                            $(document).ready(function () {
                                var dataTable = $('#datatable').DataTable({
                                    "pagingType": "full_numbers",
                                    "columnDefs": [  ],
                                    order: [
									[0, 'desc']
                                    ],
                                    drawCallback: function () {
                                        $('.paginate_button', this.api().table().container())
                                            .on('click', function () {
                                                localStorage.setItem("Product_PageNumber", $('#datatable').DataTable().page.info().page);
                                            });
                                    }
                                });

                                $('#datatable').on('length.dt', function () {
                                    localStorage.setItem("Product_PageSize", $('#datatable').DataTable().page.info().length);

                                });

                                var pageSize = localStorage.getItem("Product_PageSize");
                                var pageNumber = localStorage.getItem("Product_PageNumber");
                                if (pageSize != undefined && pageSize != null && pageSize != '') {
                                    dataTable.page.len(parseInt(pageSize)).draw(false);
                                }
                                if (pageNumber != undefined && pageNumber != null && pageNumber != '') {
                                    dataTable.page(parseInt(pageNumber)).draw(false);
                                }
                            });
                    </script>
                </div>



                @* end of table *@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>



@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
<script>


    function SelectProductModal(BannerImage_Id) {
        $('#myModal').modal('show');

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetProducts", "Settings")',
            error: function (XMLHttpRequest, textStatus, errorThrown) {

            },
            success: function (data) {
                var table = $('#datatable').DataTable();
                table.clear().draw();
                 $.each(data.Products, function (index, item) {

                     table.row.add([
                        item.Id,
                        item.Name,
                        '<img src="@ApiCall.BaseUrl'+item.ProductImages[0].Url + '" style="height:35px;width:100px; max-height:35px;max-width:100px" class="normal" />',
                        "<button id='" + item.Id + "' class='btn btn-success' Product_Name='"+item.Name+"' Product_Id='"+item.Id+"'  onclick='Select_Product(this.id," + BannerImage_Id + ")' >Select</button>"

                    ]);
                });
                table.draw();


            }

        });
    }


    var baseUrl = '@ApiCall.BaseUrl';
    $(document).ready(function () {
        var closebtn = $('<button/>', {
            type: "button",
            text: 'x',
            id: 'close-previewcustom',
            style: 'font-size: initial;',
        });
        closebtn.attr("class", "close pull-right");

        $('#divImagePreviewInsta').popover({
            trigger: 'manual',
            html: true,
            title: "<strong>Preview</strong>" + $(closebtn)[0].outerHTML,
            content: "There's no image",
            placement: 'bottom'
        });

        setTimeout(
            function () {
                if ($('#success-alert') != null) {
                    $('#success-alert').slideUp(500, function () {
                    });
                }
            }, 3000);

        //var ImageValue = $("#ImageValue").val();
        var ImageValueInsta = $("#ImageValueInsta").val();
        var editImageValInsta = $("#HasImage1Insta").text();
        //  var editImageVal = $('#HasImage1').text();
        if ($('#EditImage .row').children("div").length > 0) {
            $('#EditImage').show();
        }

        if (ImageValueInsta == "" || editImageValInsta == "") {
            $('#EditImageInsta').hide();
            $('#UploadImageInsta').show();
        }
        else {
            $('#EditImageInsta').show();
            $('#UploadImageInsta').hide();
            $("#txtImageUrlInsta").val(editImageValInsta);
        }
    });

    function OnResetClick() {
        $("#clearImage").trigger("click");
        ClearValidationErrorMessages();
    }

    function Select_Product(Product_Id, BannerImage_Id) {

        var postData = {
            Product_Id: Product_Id,
            BannerImage_Id:BannerImage_Id
        };
        $.ajax({
            type: "POST",
            data:postData,
            url: '@Url.Action("SetProducts", "Settings")',
            error: function (XMLHttpRequest, textStatus, errorThrown) {

            },
            success: function (data) {
                var PrductUrl = '@Url.Action("Index", "Product", new { ProductId = "__id__" })';
                PrductUrl = PrductUrl.replace('__id__', Product_Id);
                
                if (data.responseText == "Added") {
                    $(".thumbnail #" + BannerImage_Id).replaceWith('<a href="" onclick="return false;" class="SelectedProductName">' + $("#" + Product_Id).attr("Product_Name") + '</a>');
                    $("#thumbnail_" + BannerImage_Id).append('<button class="btn btn-danger btn-xs deleteButtons" id="' + BannerImage_Id + '" onclick="Select_Product(0,this.id)" data-title="Delete" data-productId="' + Product_Id + '" data-toggle="modal" data-target="#deleteModal">Remove Product</button>');
                    $('#myModal').modal('hide');
                } else {
                    $("#thumbnail_" + BannerImage_Id + " .SelectedProductName").remove();
                    $(".thumbnail #" + BannerImage_Id).replaceWith('<input type="button" onclick="SelectProductModal(this.id)" id="' +BannerImage_Id+ '" class="btn btn-success btn-sm text-center" value="Select Product" />');
                    $('#myModal').modal('hide');
                }

            }

        });


        //$(".thumbnail #1").replaceWith($("#27").attr("Product_Name"));
        $('#myModal').modal('hide');
    }

    function UploadImage() { //1 for banner image, 2 for instagram image
        var AllowedFileTypes = ["image/jpeg", "image/png", "image/jpg"];
        var formdata = new FormData(); //FormData object
        var fileInput = document.getElementById('fileInputInsta');
        //Iterating through each files selected in fileInput
        for (var i = 0; i < fileInput.files.length; i++) {
            var file = fileInput.files[i];
            formdata.append(file.name, file);
            if (AllowedFileTypes.indexOf(file.type) == -1) {
                return false;
            }
        }
        var xhr = new XMLHttpRequest();
        var url = '@Url.Action("UploadImage", "Settings")'
        xhr.open('POST', url);
        xhr.send(formdata);
        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) {
                debugger;
                var response = JSON.parse(xhr.response).Result;
                if (response.length > 0) {
                    var url = baseUrl + response[0].Url
                    $("#EditImageInsta img").prop("src", url);
                    $("#EditImageInsta input").val(response[0].Url);
                    $('#EditImageInsta').show();
                    $('#UploadImageInsta').hide();
                }
            }
        }
        return false;
    }

    function uploadBannerImage()
    {
         var AllowedFileTypes = ["image/jpeg", "image/png", "image/jpg"];
        var formdata = new FormData(); //FormData object
        var fileInput = document.getElementById('fileInput');
        //Iterating through each files selected in fileInput
        for (var i = 0; i < fileInput.files.length; i++) {
            var file = fileInput.files[i];
            formdata.append(file.name, file);
            if (AllowedFileTypes.indexOf(file.type) == -1) {
                return false;
            }
        }
        var xhr = new XMLHttpRequest();
        var url = '@Url.Action("UploadImage", "Settings")'
        xhr.open('POST', url);
        xhr.send(formdata);
        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) {
                debugger;
                var imgCounter = parseInt($("#EditImage .col-md-9").children("div").length);
        var response = JSON.parse(xhr.response).Result;
        var html = '';
        for (var i = 0; i < response.length; i++) {
            html += '<div class="col-md-2 col-sm-2 col-xs-6 thumbnail" style="max-height:150px;">';
            html += '<button id="btnDeleteImg" title="Delete" onclick="EditDeleteBannerPic(this)" class="btn btn-danger btn-xs deleteButtons pull-right" data-title="Delete" data-productid="8" data-toggle="modal" data-target="#deleteModal"><span class="glyphicon glyphicon-trash"></span></button>';
            html += '<img src="' + baseUrl + response[i].Url + '"  name="productImage.Url" alt="" class="img-thumbnail" style="height:95px;">';
            html += '<input type="hidden" name="BannerImages[' + imgCounter + '].Url" value="' + response[i].Url + '"></div>';
            imgCounter = imgCounter + 1;
        }
        $("#EditImage .col-md-9").append(html);
        document.getElementById("errImageUrl").innerHTML = '';
        $("#txtImageUrl").val("");
        $('#EditImage').show();
            }
        }
    }

    function EditDeleteBannerPic(imgTag) {
        $(imgTag).parent().remove();
        if ($('#EditImage .col-md-9').children("div").length > 0) {
            $('#EditImage').show();
            var c = 0;
            $("#EditImage .col-md-9").children("div").each(function () {
                $(this).children("input[type='hidden']").attr("name", "BannerImages[" + c + "].Url");
                $(this).children("img").attr("name", "BannerImages[" + c + "].Url");
                c++;
            });
        }
        else {
            $('#EditImage').hide();
        }
    }

    function ClearImage(ImageType) {
        var params = JSON.stringify({ Type: ImageType });
        var url = '@Url.Action("DeleteImage", "Settings")'
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url + "?type=" + ImageType);
        xhr.send();
        if (ImageType == 1) {
            $("#txtImageUrl").val('');
        }
        else if (ImageType == 2) {
            $("#txtImageUrlInsta").val('');
        }

    }

    function DeleteImageOnEdit(ImageType) {
        var xhr = new XMLHttpRequest();
        var url = '@Url.Action("DeleteImage", "Settings")'
        xhr.open('GET', url + "?type=" + ImageType);
        xhr.send();
        if (ImageType == 1) {
            $("#txtImageUrl").val('');
        }
        else if (ImageType == 2) {
            $("#txtImageUrlInsta").val('');
        }
    }



    function EditDivDeletePic(ImageType) {
        if (ImageType == 1) {
            $('#EditImage').hide();
            $('#UploadImage').show();
        }
        else if (ImageType == 2) {
            $('#EditImageInsta').hide();
            $('#UploadImageInsta').show();
        }

        DeleteImageOnEdit(ImageType);
    }


    function OnSuccessSettingsUpdation() {
        window.location.href = "@Url.Action("Index", "Settings")";
    }



    $('#clearImageInsta').click(function () {
        $('#divImagePreviewInsta').attr("data-content", "").popover('hide');
        $('#txtImageUrlInsta').val("");
        $('#clearImageInsta').hide();
        $('#divImgPreviewInput input:file').val("");
        $("#spanImagePreviewInputTitle").text("Browse");
    });

    $(".image-preview-input-instagram input:file").change(function () {
        var img = $('<img/>', {
            id: 'dynamic',
            width: 250,
            height: 200
        });
        var file = this.files[0];
        var reader = new FileReader();
        // Set preview image into the popover data-content
        reader.onload = function (e) {
            $("#spanImagePreviewInputTitle").text("Change");
            $("#clearImageInsta").show();
            $("#txtImageUrlInsta").val(file.name);
            img.attr('src', e.target.result);
            $("#InstagramImageFileName").attr('readonly', true);
            $("#divImagePreviewInsta").attr("data-content", $(img)[0].outerHTML).popover("show");
        }
        reader.readAsDataURL(file);
    });


    $(document).on('click', '#close-previewcustom', function () {
        $('#divImagePreviewInsta').popover('hide');
        // Hover befor close the preview
        $('#divImagePreviewInsta').hover(
            function () {
                $('#divImagePreviewInsta').popover('show');
            },
             function () {
                 $('#divImagePreviewInsta').popover('hide');
             }
        );
    });

</script>
